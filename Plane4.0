import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;

public class Plane {
	int x_location=150;
	int y_location=450;
	private static final int x_weiyi=25;
	private static final int y_weiyi=25;
	enum FangXiang{up,down,left,right,stop};
	FangXiang fx = FangXiang.stop;
	boolean U = false,D = false,L = false,R = false;
	
	public void paint(Graphics g) {
		g.setColor(Color.BLUE);	
		g.fillOval(x_location, y_location, 20,30 );
		this.move();
	}
	
	public void move() {
		if(U && !D && !L && !R) {
			y_location = y_location - y_weiyi;
		}
		else if(!U && D && !L && !R) {
			y_location = y_location + y_weiyi;
		}
		else if(!U && !D && L && !R) {
			x_location = x_location - x_weiyi;
		}
		else if(!U && !D && !L && R) {
			x_location = x_location + x_weiyi;
		}
	}
	
	public void keyPressed(KeyEvent e) {
		// TODO Auto-generated method stub
		int k = e.getKeyCode();
		if(k == KeyEvent.VK_UP) {
			U = true;
		}
		else if(k == KeyEvent.VK_DOWN) {
			D = true;
		}
		else if(k == KeyEvent.VK_LEFT) {
			L = true;
		}
		else if(k == KeyEvent.VK_RIGHT) {
			R = true;
		}
	}

	public void keyReleased(KeyEvent e) {
		// TODO Auto-generated method stub
		int k = e.getKeyCode();
		if(k == KeyEvent.VK_UP) {
			U = false;
		}
		else if(k == KeyEvent.VK_DOWN) {
			D = false;
		}
		else if(k == KeyEvent.VK_LEFT) {
			L = false;
		}
		else if(k == KeyEvent.VK_RIGHT) {
			R = false;
		}

	}
	
}
